/*! For license information please see 6eed4150.6d647aa6.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{265:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return c}));var a=n(1),r=n(9),p=(n(458),n(457)),i={id:"11-express",title:"Building a site using Node.js and Express"},l={id:"11-express",title:"Building a site using Node.js and Express",description:"## Getting start",source:"@site/../docs/11-express.md",permalink:"/node_comit/docs/11-express",editUrl:"https://github.com/prma85/node_comit/edit/master/../docs/11-express.md",lastUpdatedBy:"prma85",lastUpdatedAt:1582870531,sidebar:"course",previous:{title:"Node.js",permalink:"/node_comit/docs/10-nodejs"},next:{title:"MongoDB & Mongoose",permalink:"/node_comit/docs/12-mongodb"}},o=[{value:"Getting start",id:"getting-start",children:[{value:"Installing packages",id:"installing-packages",children:[]},{value:"Configuring scripts",id:"configuring-scripts",children:[]},{value:"Using express server",id:"using-express-server",children:[]},{value:"Project configuration",id:"project-configuration",children:[]},{value:"Using public folder",id:"using-public-folder",children:[]},{value:"Adding more content",id:"adding-more-content",children:[]},{value:"Creating more templates",id:"creating-more-templates",children:[]},{value:"Getting the data by id",id:"getting-the-data-by-id",children:[]},{value:"Refining the code",id:"refining-the-code",children:[]},{value:"Improving the CSS",id:"improving-the-css",children:[]},{value:"Adding new data",id:"adding-new-data",children:[]},{value:"Handling POST requests",id:"handling-post-requests",children:[]}]}],s={rightToc:o};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(p.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(p.b)("h2",{id:"getting-start"},"Getting start"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Now that we know how to create a project with NPM")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Add Express as dependency and create a web server")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We can also create some routes to handle our requests")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"And configure our statics assets")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Also, we can create templates using Pug and render them from Express server using the render method")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"It's time to put everything in action")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"You can donwload the project code from the ",Object(p.b)("a",Object(a.a)({parentName:"p"},{href:""}),"github repo"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"First lets create a node-site-example folder and change directory into it"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"mkdir node-site-example\ncd node-site-example\n")))),Object(p.b)("h3",{id:"installing-packages"},"Installing packages"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"After creating the folder lets install pug, express and ",Object(p.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/remy/nodemon"}),"nodemon")),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"npm install express pug nodemon\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Nodemon is a Node.js module that will watch our files to see if we save them and reload the server for us"))),Object(p.b)("h3",{id:"configuring-scripts"},"Configuring scripts"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Configure NPM start script"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'"start": "nodemon"\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Nodemon will look for an index.js file to start the server and watch for changes"))),Object(p.b)("h3",{id:"using-express-server"},"Using express server"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Create an ",Object(p.b)("inlineCode",{parentName:"p"},"index.js")," file and add a express server")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.js"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const express = require("express");\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"And start the server"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm start\n\n> node-site-example@1.0.0 start /node-site-example\n> nodemon\n\n[nodemon] 1.17.4\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching: *.*\n[nodemon] starting `node index.js`\nServer running on port 3000\n")))),Object(p.b)("h3",{id:"project-configuration"},"Project configuration"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Now we have our server running and we need to configure routes, static assets and the template engine")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We can see that nodemon is looking for all our files ",Object(p.b)("inlineCode",{parentName:"p"},"[nodemon] watching: *.*"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Also we can restart the server writing ",Object(p.b)("inlineCode",{parentName:"p"},"rs")," on the terminal that is running nodemon on in case we need to")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Create a ",Object(p.b)("inlineCode",{parentName:"p"},"views")," folder")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Add ",Object(p.b)("inlineCode",{parentName:"p"},"index.pug")," to the views folder")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Add this code to index.pug")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.pug"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"doctype html\n  head\n    title Simple site using Node.js, Express and Pug\n  body\n    h1 Wellcome to Node.js, Express and Pug\n    p This project is just to practice\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Configure Express to use pug"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-index.js"}),"app.set('view engine', 'pug');\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Finaly add a root get route handler to render the home content using index.html"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"app.get('/', (req, res) => {\n  res.render('index', {});\n});\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Your index.js file must look like this")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.js"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const express = require("express");\nconst app = express();\nconst port = 3000;\n\napp.set("view engine", "pug");\n\napp.get("/", (req, res) => {\n  res.render("index", {});\n});\n\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\n')))),Object(p.b)("h3",{id:"using-public-folder"},"Using public folder"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"It's time to add the static public folder and configure express to use it")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Create a ",Object(p.b)("inlineCode",{parentName:"p"},"public")," folder")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Configure Express to use the public folder")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.js"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"app.use(express.static('public'));\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We could add all the static assets together as siblings but it's better to organize our code")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Create the following folder structure"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"/node-site-example\n|- public\n    |- css\n        |- styles.css\n    |- img\n    |- js\n      |- scripts.js\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Add some CSS to the site")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"styles.css"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),"* {\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  color: black;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 16px;\n}\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Add some JS to the site")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"scripts.js"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'window.onload = function() {\n  console.log("Loaded site");\n};\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Now that we have the css and js files ready we need to add it to the template")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.pug"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),'link(rel=\'stylesheet\', href="/css/styles.css")\nscript(src="/js/scripts.js")\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We use link for the CSS file and script for the JavaScript file")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"If you refresh the browser now the font should look different and the size too")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Also is nice that we removed all padding and margins from the elements")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"As we'll have to create more than one page we need to create a layout")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Create the ",Object(p.b)("inlineCode",{parentName:"p"},"layout.pug")," file inside the view folder")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Copy and paste all the content from index.pug template into the layout.pug one")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Also we need to add a styles, scripts & content block so we can change the content from the different templates")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"layout.pug"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),'doctype html\nhtml\n  head\n    title Simple site using Node.js, Express and Pug\n    link(rel=\'stylesheet\', href="/css/styles.css")\n    block styles\n    script(src="/js/scripts.js")\n    block scripts\n  body\n    block content\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Now the index.pug file will only contain the code that is relative only to that file")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We need to extend the layout and create the block content"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-index.pug"}),"extends ./layout.pug\n\nblock content\n  h1 Wellcome to Node.js, Express and Pug\n  p This project is just to practice\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Check that the site it still works as expected")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"If we don't have any errors we must see the same content but now using the layout"))),Object(p.b)("h3",{id:"adding-more-content"},"Adding more content"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Inside the public/img create a ",Object(p.b)("inlineCode",{parentName:"p"},"superheroes")," folder and download the following images"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"/node-site-example\n|- public\n    |- img\n        |- blackwidow.jpg\n        |- captainmarvel.jpg\n        |- captanamerica.jpg\n        |- daredevil.jpg\n        |- hulk.jpg\n        |- ironman.jpg\n        |- spiderman.jpg\n        |- thor.jpg\n        |- wolverine.jpg\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Now we have the superheroes images in our static assets folder")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We want to create a homepage with some superheores picture and name")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Then we can create a superheroe description page")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Start by creating a superheroes array in the root route handler")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.js"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'app.get("/", (req, res) => {\n  const superheroes = [\n    { name: "SPIDER-MAN", image: "spiderman.jpg" },\n    { name: "CAPTAIN MARVEL", image: "captainmarvel.jpg" },\n    { name: "HULK", image: "hulk.jpg" },\n    { name: "THOR", image: "thor.jpg" },\n    { name: "IRON MAN", image: "ironman.jpg" },\n    { name: "DAREDEVIL", image: "daredevil.jpg" },\n    { name: "BLACK WIDOW", image: "blackwidow.jpg" },\n    { name: "CAPTAIN AMERICA", image: "captanamerica.jpg" },\n    { name: "WOLVERINE", image: "wolverine.jpg" }\n  ];\n\n  res.render("index", { superheroes: superheroes });\n});\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We can see that we have a ",Object(p.b)("inlineCode",{parentName:"p"},"superheroes array")," that has JavaScript objects as content")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Each object has a superheroe name and image")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Then we pass this superheroes array as superheroes object property")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"This means that at the template level we'll have a ",Object(p.b)("inlineCode",{parentName:"p"},"superheroes")," variable that represents this objects")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Now lets show the superheroes on our home page")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Using each we can iterate the superheroes collection"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-index.pug"}),"each superheroe in superheroes\n  div.superheroe-container\n    img(src='/img/superheroes/' + superheroe.image)\n    h3= superheroe.name\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Update index.pug to match this code:"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"extends ./layout.pug\n\nblock content\n  h1 Superheroes\n  p This site shows superheroes information\n  each superheroe in superheroes\n    div.superheroe-container\n      img(src='/img/superheroes/' + superheroe.image)\n      h3= superheroe.name\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Now our site has all the superheroes pictures and name but it would be nice to change the design a little")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Add the following class to your styles.css file")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"styles.css"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),".superheroe-container {\n  display: inline-block;\n  width: 200px;\n  text-align: center;\n  margin-right: 10px;\n  margin-bottom: 40px;\n}\n")),Object(p.b)("h3",Object(a.a)({parentName:"li"},{id:"adding-routes"}),"Adding routes")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"It would be nice to be able to click the image or the superhero name and see a detail page")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"To create this feature we need to do a couple of changes")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"First we need to change the template"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-index.pug"}),"extends ./layout.pug\n\nblock content\n  h1 Superheroes\n  p This site shows superheroes information\n  each superheroe in superheroes\n    div.superheroe-container\n      a(href=\"/superheroes/\")\n        img(src='/img/superheroes/' + superheroe.image)\n        h3= superheroe.name\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We added a link element that relates this page with ",Object(p.b)("inlineCode",{parentName:"p"},"/superheroes/"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"So far so good but we still don't have the superheroes route configured")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Lets add a new route config")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.js"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'app.get("/superheros/", (req, res) => {\n  const superheroes = [\n    { name: "SPIDER-MAN", image: "spiderman.jpg" },\n    { name: "CAPTAIN MARVEL", image: "captainmarvel.jpg" },\n    { name: "HULK", image: "hulk.jpg" },\n    { name: "THOR", image: "thor.jpg" },\n    { name: "IRON MAN", image: "ironman.jpg" },\n    { name: "DAREDEVIL", image: "daredevil.jpg" },\n    { name: "BLACK WIDOW", image: "blackwidow.jpg" },\n    { name: "CAPTAIN AMERICA", image: "captanamerica.jpg" },\n    { name: "WOLVERINE", image: "wolverine.jpg" }\n  ];\n\n  res.render("superhero", { superheroes: superheroes });\n});\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Great now we have the route but it looks like we have the superheroes repeated")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Also we only need to show one superhero at the time")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"And.. we need to create the superhero template")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Uff.. so many things we better start soon!"))),Object(p.b)("h3",{id:"creating-more-templates"},"Creating more templates"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Create the ",Object(p.b)("inlineCode",{parentName:"p"},"superhero.pug")," template inside the views folder")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Add the following code")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"superheroe.pug"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"extends ./layout.pug\n\nblock content\n  img(src='/img/superheroes/' + superheroe.image)\n  h3= superheroe.name\n")))),Object(p.b)("h3",{id:"getting-the-data-by-id"},"Getting the data by id"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Great we are using the layout template that we created but we don't have the superheroe data")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"How can we deal with this situation?")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"So we know that we can use the router to pass data to the template")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"But we need to know the selected superheroe, right?")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We can use the superhero name to select the selected superhero")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Or we can use an id")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"To use the id will have to update the superheroes array objects"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const superheroes = [\n  { id: 1, name: "SPIDER-MAN", image: "spiderman.jpg" },\n  { id: 2, name: "CAPTAIN MARVEL", image: "captainmarvel.jpg" },\n  { id: 3, name: "HULK", image: "hulk.jpg" },\n  { id: 4, name: "THOR", image: "thor.jpg" },\n  { id: 5, name: "IRON MAN", image: "ironman.jpg" },\n  { id: 6, name: "DAREDEVIL", image: "daredevil.jpg" },\n  { id: 7, name: "BLACK WIDOW", image: "blackwidow.jpg" },\n  { id: 8, name: "CAPTAIN AMERICA", image: "captanamerica.jpg" },\n  { id: 9, name: "WOLVERINE", image: "wolverine.jpg" }\n];\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Great now we have ids on our superheroes objects")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"I don't know about you but I think it's still pretty bad to have this duplicated array")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Also we'll need the ids to create the links")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"What about if we move this array to a higher scoe level so both routes can use it?")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.js"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const express = require("express");\nconst app = express();\nconst port = 3000;\n\napp.set("view engine", "pug");\napp.use(express.static("public"));\n\nconst superheroes = [\n  { id: 1, name: "SPIDER-MAN", image: "spiderman.jpg" },\n  { id: 2, name: "CAPTAIN MARVEL", image: "captainmarvel.jpg" },\n  { id: 3, name: "HULK", image: "hulk.jpg" },\n  { id: 4, name: "THOR", image: "thor.jpg" },\n  { id: 5, name: "IRON MAN", image: "ironman.jpg" },\n  { id: 6, name: "DAREDEVIL", image: "daredevil.jpg" },\n  { id: 7, name: "BLACK WIDOW", image: "blackwidow.jpg" },\n  { id: 8, name: "CAPTAIN AMERICA", image: "captanamerica.jpg" },\n  { id: 9, name: "WOLVERINE", image: "wolverine.jpg" }\n];\n\napp.get("/", (req, res) => {\n  res.render("index", { superheroes: superheroes });\n});\n\napp.get("/superheros/", (req, res) => {\n  res.render("superhero", { superheroes: superheroes });\n});\n\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\n')))),Object(p.b)("h3",{id:"refining-the-code"},"Refining the code"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"This is looking much better now")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We still have a problem on how to know the selected superhero")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Having the ids to identify them is great but we still need to update our code")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"First modify the links to use the superhero id")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.pug"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),'a(href="/superheroes/" + superheroe.id)\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"If the user clicks on this link it will redirect to a url that looks like this: ",Object(p.b)("a",Object(a.a)({parentName:"p"},{href:"http://localhost:3000/superheroes/2"}),"http://localhost:3000/superheroes/2"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"So it looks like the user will select a superhero and we'll go to the /superheroes/ page and we have the id")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Now we need to update our express route so we can get the id param and get the superhero data")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.js"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'app.get("/superheros/:id", (req, res) => {\n  const selectedId = req.params.id;\n\n  let selectedSuperhero = superheroes.filter(superhero => {\n    return superhero.id === +selectedId;\n  });\n\n  selectedSuperhero = selectedSuperhero[0];\n\n  res.render("superhero", { superheroe: selectedSuperhero });\n});\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Using ",Object(p.b)("inlineCode",{parentName:"p"},"'/superheros/:id'")," we define that this route contains a parameter that we need to get")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"This request parameter is called id and will come after the ",Object(p.b)("inlineCode",{parentName:"p"},"superheros")," route")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"To get this value we use ",Object(p.b)("inlineCode",{parentName:"p"},"req.params.id"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We could name this parameter with any name")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Then we filter the superheroes array by id")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"And assighn the selected superhero to the ",Object(p.b)("inlineCode",{parentName:"p"},"selectedSuperhero")," variable")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"The only remainding thing to do is render the template using the selectedSuperhero data")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Now we can call any this url ",Object(p.b)("a",Object(a.a)({parentName:"p"},{href:"http://localhost:3000/superheros/2"}),"http://localhost:3000/superheros/2")," changing the id from 1 to 9")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Our home page still has blue and violet links so update the css so it looks better"))),Object(p.b)("h3",{id:"improving-the-css"},"Improving the CSS"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"styles.css"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),".superheroe-container a {\n  color: black;\n  text-decoration: none;\n}\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Great we're able to show the superheroes home and detail page"))),Object(p.b)("h3",{id:"adding-new-data"},"Adding new data"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"It would be really nice to be able to create a new superhero too, right?")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"To create any new resource we need to create a form")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We'll create a new template and add a form")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Create the ",Object(p.b)("inlineCode",{parentName:"p"},"create.pug")," file in the views folder and add the following code")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},Object(p.b)("inlineCode",{parentName:"p"},"create.pug")),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),'div.create-container\n  form(action="/superheros",  method="post")\n    input(type="text", placeholder="suerhero name", required="required", name="superhero")\n    button Create\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"This code will transform in this HTML"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<div class="create-container">\n  <form action="/superheros" method="post">\n    <input\n      type="text"\n      placeholder="suerhero name"\n      required="required"\n      name="superhero"\n    />\n    <button>Create</button>\n  </form>\n</div>\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"So we can see that it's just a form that when gets submited it will submit the values to ",Object(p.b)("inlineCode",{parentName:"p"},"/superheros"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"As we have an input with the ",Object(p.b)("inlineCode",{parentName:"p"},"superhero name")," we'll be able to retrieve the value from the server using this same name")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"The form is set to use the HTTP post method so we'll need to create a route handle to handle this request")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"It's nice to have the template ready but we still need to add it to the index.pug file")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We can do this using Pug ",Object(p.b)("inlineCode",{parentName:"p"},"include"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Add the following line to your index.pug file"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"include ./create.pug\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.pug"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"extends ./layout.pug\n\nblock content\n  h1 Superheroes\n  p This site shows superheroes information\n  include ./create.pug\n\n  each superheroe in superheroes\n    div.superheroe-container\n      a(href=\"/superheros/\" + superheroe.id)\n        img(src='/img/superheroes/' + superheroe.image)\n        h3= superheroe.name\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"And now add some styles so the form looks better")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"styles.css"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),'.create-container {\n  padding: 10px;\n}\n\n.create-container input[type="text"] {\n  font-size: 16px;\n  padding: 5px;\n}\n\n.create-container button {\n  font-size: 16px;\n  padding: 5px;\n  margin-left: 10px;\n}\n')))),Object(p.b)("h3",{id:"handling-post-requests"},"Handling POST requests"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Now that our views are ready lets create the route handler")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"To hande post requests with express we need to install ",Object(p.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/expressjs/body-parser"}),"body-parser")," module")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"From the body-parser site we get this definition: ",Object(p.b)("inlineCode",{parentName:"p"},"Parse incoming request bodies in a middleware before your handlers, available under the req.body property"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"This means that we need to configure body-parser as middleware and it will append the submited values to the request object body property")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Install body-parser as dependency"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"npm i body-parser\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"After installing it we can require it from our index.js file")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.js"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const bodyParser = require("body-parser");\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Add body-parser as middleware")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.js"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const urlencodedParser = bodyParser.urlencoded({ extended: false });\n"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"After configured body-parser as middleware we can create our route handler")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"This route handler will listen post requests on /superheros")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"It will recibe the superhero name as request body parameter")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Once we have the superhero name we'll have to create a new superhero object and append it to the superheroes list")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Then send a response to the client")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"The new route handler must have the following code:")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"index.js"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'app.post("/superheros", urlencodedParser, (req, res) => {\n  const newId = superheroes[superheroes.length - 1].id + 1;\n  const newSuperHero = {\n    id: newId,\n    name: req.body.superhero.toUpperCase(),\n    image: "lukecage.jpg"\n  };\n\n  superheroes.push(newSuperHero);\n\n  res.redirect("/");\n});\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"First we create a post route handler to ",Object(p.b)("inlineCode",{parentName:"p"},"app.post('/superheros')"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Then we added body-parser to this call using the ",Object(p.b)("inlineCode",{parentName:"p"},"urlencodedParser")," middleware")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Body parser allows us to configure it for all routes or some of them")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"In this case we only need it for this route and that's why we use ",Object(p.b)("inlineCode",{parentName:"p"},"urlencodedParser"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"When we get a request body-parser will add the values to the request object body")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"This means that in our route this it's going to be ",Object(p.b)("inlineCode",{parentName:"p"},"req.body"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"In this example the req.body will look something like:"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'{\n  superhero: "Value from the form";\n}\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"To get the submited superhero value we use ",Object(p.b)("inlineCode",{parentName:"p"},"req.body.superhero")," and as it's a string we just call ",Object(p.b)("inlineCode",{parentName:"p"},"toUpperCase()")," so it's consistent with the rest of the superheroes names")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"As we need an ID for the new super hero we can do something like: ",Object(p.b)("inlineCode",{parentName:"p"},"const newId = superheroes[superheroes.length - 1].id + 1;"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We'll get the last superhero id and increment one")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"This option is valid as it's not code that we'll put in production")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We can get this value from a database once we insert the new value")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"After getting the new id we can create a new superhero object"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const newSuperHero = {\n  id: newId,\n  name: req.body.superhero.toUpperCase(),\n  image: "lukecage.jpg"\n};\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We use the same object structure as the rest of the superheroes objects")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Use newId as id")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"And the name we get it from the request body")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"As we don't have an image for now let's add some value")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Also you can download this ",Object(p.b)("a",Object(a.a)({parentName:"p"},{href:""}),"lukecage.jpg")," and put it inside the img folder")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Now that we have the superhero we can add it to the collection"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"superheroes.push(newSuperHero);\n")),Object(p.b)("h3",Object(a.a)({parentName:"li"},{id:"responding-requests"}),"Responding requests")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"And then we send the response.. oh wait.. what do we respond?")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"In all our previous routes we send something back as response but in this case we created a new route handler")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"We could return the same render response that we send on ",Object(p.b)("inlineCode",{parentName:"p"},"/"))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"If we do this the user will see that we're showing a different url but with the same content")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"So what we can do it's redirect the request to the ",Object(p.b)("inlineCode",{parentName:"p"},"/")," handler")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"As we added a new superhero to the collection it will get all the superheroes with the one we just created")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Then it will render the template and send the response back to the user")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"The user won't notice all the things that just happened")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"So our index.js file looks like this:"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const express = require("express");\nconst app = express();\nconst port = 3000;\nconst bodyParser = require("body-parser");\nconst urlencodedParser = bodyParser.urlencoded({ extended: false });\n\napp.set("view engine", "pug");\napp.use(express.static("public"));\n\nconst superheroes = [\n  { id: 1, name: "SPIDER-MAN", image: "spiderman.jpg" },\n  { id: 2, name: "CAPTAIN MARVEL", image: "captainmarvel.jpg" },\n  { id: 3, name: "HULK", image: "hulk.jpg" },\n  { id: 4, name: "THOR", image: "thor.jpg" },\n  { id: 5, name: "IRON MAN", image: "ironman.jpg" },\n  { id: 6, name: "DAREDEVIL", image: "daredevil.jpg" },\n  { id: 7, name: "BLACK WIDOW", image: "blackwidow.jpg" },\n  { id: 8, name: "CAPTAIN AMERICA", image: "captanamerica.jpg" },\n  { id: 9, name: "WOLVERINE", image: "wolverine.jpg" }\n];\n\napp.get("/", (req, res) => {\n  res.render("index", { superheroes: superheroes });\n});\n\napp.get("/superheros/:id", (req, res) => {\n  const selectedId = req.params.id;\n\n  let selectedSuperhero = superheroes.filter(superhero => {\n    return superhero.id === +selectedId;\n  });\n\n  selectedSuperhero = selectedSuperhero[0];\n\n  res.render("superhero", { superheroe: selectedSuperhero });\n});\n\napp.post("/superheros", urlencodedParser, (req, res) => {\n  const newId = superheroes[superheroes.length - 1].id + 1;\n  const newSuperHero = {\n    id: newId,\n    name: req.body.superhero.toUpperCase(),\n    image: "lukecage.jpg"\n  };\n\n  superheroes.push(newSuperHero);\n\n  res.redirect("/");\n});\n\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\n'))),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"It's so good to see how our project keeps on groing and that we can add more features to it")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"I'm sure that you're thinking about how to upload a picture")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"To support this we need to refactor our code to use ",Object(p.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/expressjs/multer"}),"multer")," instead of body-parser")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("p",{parentName:"li"},"Install multer as dependency"),Object(p.b)("pre",{parentName:"li"},Object(p.b)("code",Object(a.a)({parentName:"pre"},{}),"npm i multer\n")))))}c.isMDXComponent=!0},457:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),c=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},b=function(e){var t=c(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,p=e.originalType,i=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),b=c(n),m=a,d=b["".concat(i,".").concat(m)]||b[m]||u[m]||p;return n?r.a.createElement(d,l({ref:t},s,{components:n})):r.a.createElement(d,l({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=n.length,i=new Array(p);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<p;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},458:function(e,t,n){"use strict";e.exports=n(459)},459:function(e,t,n){"use strict";var a=n(460),r="function"==typeof Symbol&&Symbol.for,p=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,l=r?Symbol.for("react.fragment"):60107,o=r?Symbol.for("react.strict_mode"):60108,s=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,b=r?Symbol.for("react.context"):60110,u=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,d=r?Symbol.for("react.suspense_list"):60120,j=r?Symbol.for("react.memo"):60115,h=r?Symbol.for("react.lazy"):60116;r&&Symbol.for("react.fundamental"),r&&Symbol.for("react.responder"),r&&Symbol.for("react.scope");var O="function"==typeof Symbol&&Symbol.iterator;function N(e){for(var t=e.message,n="https://reactjs.org/docs/error-decoder.html?invariant="+t,a=1;a<arguments.length;a++)n+="&args[]="+encodeURIComponent(arguments[a]);return e.message="Minified React error #"+t+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f={};function w(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||g}function y(){}function v(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||g}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw N(Error(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=w.prototype;var x=v.prototype=new y;x.constructor=v,a(x,w.prototype),x.isPureReactComponent=!0;var k={current:null},C={suspense:null},A={current:null},S=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,n){var a,r={},i=null,l=null;if(null!=t)for(a in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)S.call(t,a)&&!I.hasOwnProperty(a)&&(r[a]=t[a]);var o=arguments.length-2;if(1===o)r.children=n;else if(1<o){for(var s=Array(o),c=0;c<o;c++)s[c]=arguments[c+2];r.children=s}if(e&&e.defaultProps)for(a in o=e.defaultProps)void 0===r[a]&&(r[a]=o[a]);return{$$typeof:p,type:e,key:i,ref:l,props:r,_owner:A.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===p}var T=/\/+/g,R=[];function q(e,t,n,a){if(R.length){var r=R.pop();return r.result=e,r.keyPrefix=t,r.func=n,r.context=a,r.count=0,r}return{result:e,keyPrefix:t,func:n,context:a,count:0}}function _(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>R.length&&R.push(e)}function W(e,t,n){return null==e?0:function e(t,n,a,r){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var o=!1;if(null===t)o=!0;else switch(l){case"string":case"number":o=!0;break;case"object":switch(t.$$typeof){case p:case i:o=!0}}if(o)return a(r,t,""===n?"."+L(t,0):n),1;if(o=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+L(l=t[s],s);o+=e(l,c,a,r)}else if(null===t||"object"!=typeof t?c=null:c="function"==typeof(c=O&&t[O]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(l=t.next()).done;)o+=e(l=l.value,c=n+L(l,s++),a,r);else if("object"===l)throw a=""+t,N(Error(31),"[object Object]"===a?"object with keys {"+Object.keys(t).join(", ")+"}":a,"");return o}(e,"",t,n)}function L(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function M(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var a=e.result,r=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?U(e,a,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:p,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,r+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(T,"$&/")+"/")+n)),a.push(e))}function U(e,t,n,a,r){var p="";null!=n&&(p=(""+n).replace(T,"$&/")+"/"),W(e,D,t=q(t,p,a,r)),_(t)}function $(){var e=k.current;if(null===e)throw N(Error(321));return e}var H={Children:{map:function(e,t,n){if(null==e)return e;var a=[];return U(e,a,null,t,n),a},forEach:function(e,t,n){if(null==e)return e;W(e,M,t=q(null,null,t,n)),_(t)},count:function(e){return W(e,(function(){return null}),null)},toArray:function(e){var t=[];return U(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw N(Error(143));return e}},createRef:function(){return{current:null}},Component:w,PureComponent:v,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:b,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:u,render:e}},lazy:function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:j,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return $().useCallback(e,t)},useContext:function(e,t){return $().useContext(e,t)},useEffect:function(e,t){return $().useEffect(e,t)},useImperativeHandle:function(e,t,n){return $().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return $().useLayoutEffect(e,t)},useMemo:function(e,t){return $().useMemo(e,t)},useReducer:function(e,t,n){return $().useReducer(e,t,n)},useRef:function(e){return $().useRef(e)},useState:function(e){return $().useState(e)},Fragment:l,Profiler:s,StrictMode:o,Suspense:m,unstable_SuspenseList:d,createElement:E,cloneElement:function(e,t,n){if(null==e)throw N(Error(267),e);var r=a({},e.props),i=e.key,l=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,o=A.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)S.call(t,c)&&!I.hasOwnProperty(c)&&(r[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)r.children=n;else if(1<c){s=Array(c);for(var b=0;b<c;b++)s[b]=arguments[b+2];r.children=s}return{$$typeof:p,type:e.type,key:i,ref:l,props:r,_owner:o}},createFactory:function(e){var t=E.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.10.2",unstable_withSuspenseConfig:function(e,t){var n=C.suspense;C.suspense=void 0===t?null:t;try{e()}finally{C.suspense=n}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:k,ReactCurrentBatchConfig:C,ReactCurrentOwner:A,IsSomeRendererActing:{current:!1},assign:a}},V={default:H},B=V&&H||V;e.exports=B.default||B},460:function(e,t,n){"use strict";var a=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(e){a[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(r){return!1}}()?Object.assign:function(e,t){for(var n,l,o=i(e),s=1;s<arguments.length;s++){for(var c in n=Object(arguments[s]))r.call(n,c)&&(o[c]=n[c]);if(a){l=a(n);for(var b=0;b<l.length;b++)p.call(n,l[b])&&(o[l[b]]=n[l[b]])}}return o}}}]);